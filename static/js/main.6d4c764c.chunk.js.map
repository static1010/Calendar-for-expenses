{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpensItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expensData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpanseData","expenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpensItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d4c764c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expensData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expensData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__controls\">\r\n          <label> Title </label>{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />{\" \"}\r\n        </div>{\" \"}\r\n        <div className=\"new-expense__controls\">\r\n          <label> Amount </label>{\" \"}\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />{\" \"}\r\n        </div>{\" \"}\r\n        <div className=\"new-expense__controls\">\r\n          <label> Date </label>{\" \"}\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01.01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />{\" \"}\r\n        </div>{\" \"}\r\n      </div>{\" \"}\r\n      <div className=\"new-expense__actions\">\r\n        <button type='button' onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\"> Add Expense </button>{\" \"}\r\n      </div>{\" \"}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const onSaveExpenseDataHandler = (enteredExpanseData) => {\r\n        const expenseData = {\r\n            ...enteredExpanseData,\r\n            id: Math.random().toString(),\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false)\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return ( <\r\n        div className = \"new-expense\" > {!isEditing && ( <\r\n                button onClick = { startEditingHandler } > Add new Expense < /button>\r\n            )\r\n        } {\r\n            isEditing && ( <\r\n                ExpenseForm onSaveExpenseData = { onSaveExpenseDataHandler }\r\n                onCancel = { stopEditingHandler }\r\n                />\r\n            )\r\n        } <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React from \"react\";\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className\r\n\r\n\r\n    return <div className = { classes } > { props.children } < /div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    }\r\n\r\n\r\n    return ( <\r\n        div className = 'expenses-filter' >\r\n        <\r\n        div className = 'expenses-filter__control' >\r\n        <\r\n        label > Filter by year < /label> <\r\n        select value = { props.selected }\r\n        onChange = { dropdownChangeHandler } >\r\n        <\r\n        option value = '2022' > 2022 < /option> <\r\n        option value = '2021' > 2021 < /option> <\r\n        option value = '2020' > 2020 < /option> <\r\n        option value = '2019' > 2019 < /option> <\r\n        /select> <\r\n        /div> <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString(\"en-Us\", { month: \"long\" });\r\n    const day = props.date.toLocaleString(\"en-Us\", { day: \"2-digit\" });\r\n    const year = props.date.getFullYear(\"en-Us\", { month: \"long\" });\r\n\r\n    return ( <\r\n        div className = \"expense-date\" >\r\n        <\r\n        div className = \"expense-date__month\" > { month } < /div> <\r\n        div className = \"expense-date__year\" > { year } < /div> <\r\n        div className = \"expense-date__day\" > { day } < /div> <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React from \"react\";\r\n\r\nimport \"./ExpensItem.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\nconst ExpensItem = (props) => {\r\n    return ( <\r\n        li >\r\n        <\r\n        Card className = \"expense-item\" >\r\n        <\r\n        ExpenseDate date = { props.date }\r\n        />{\" \"} <\r\n        div className = \"expense-item__description\" >\r\n        <\r\n        h2 > { props.title } < /h2>{\" \"} <\r\n        div className = \"expense-item__price\" > $ { props.amount } < /div>{\" \"} <\r\n        /div>{\" \"} <\r\n        /Card> <\r\n        /li>\r\n    );\r\n};\r\n\r\nexport default ExpensItem;","import React from \"react\";\r\n\r\nimport ExpensItem from \"./ExpensItem\";\r\nimport \"./ExpensesList.css\";\r\nconst ExpensesList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return <h2 className = \"expenses-list__fallback\" > Found no expenses < /h2>;\r\n    }\r\n\r\n    return ( <\r\n        ul className = \"expenses-list \" > {\r\n            props.items.map((expense) => ( <\r\n                ExpensItem key = { expense.id }\r\n                title = { expense.title }\r\n                amount = { expense.amount }\r\n                date = { expense.date }\r\n                />\r\n            ))\r\n        } <\r\n        /ul>\r\n    );\r\n};\r\nexport default ExpensesList;","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = \"0%\";\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return ( <\r\n        div className = \"chart-bar\" >\r\n        <\r\n        div className = \"chart-bar__inner\" >\r\n        <\r\n        div className = \"chart-bar__fill\"\r\n        style = {\r\n            { height: barFillHeight } } >\r\n        < /div> <\r\n        /div> <\r\n        div className = \"chart-bar__label\" > { props.label } < /div> <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return ( <\r\n        div className = \"chart\" > {\r\n            props.dataPoints.map((dataPoint) => ( <\r\n                ChartBar key = { dataPoint.label }\r\n                value = { dataPoint.value }\r\n                maxValue = { totalMaximum }\r\n                label = { dataPoint.label }\r\n                />\r\n            ))\r\n        } <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        { label: \"Jan\", value: 0 },\r\n        { label: \"Feb\", value: 0 },\r\n        { label: \"Mar\", value: 0 },\r\n        { label: \"Apr\", value: 0 },\r\n        { label: \"May\", value: 0 },\r\n        { label: \"Jun\", value: 0 },\r\n        { label: \"Jul\", value: 0 },\r\n        { label: \"Aug\", value: 0 },\r\n        { label: \"Sep\", value: 0 },\r\n        { label: \"Oct\", value: 0 },\r\n        { label: \"Nov\", value: 0 },\r\n        { label: \"Dec\", value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints = { chartDataPoints }\r\n    />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter((expense) => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n\r\n\r\n    return ( <\r\n        div >\r\n        <\r\n        Card className = \"expenses\" >\r\n        <\r\n        ExpensesFilter selected = { filteredYear }\r\n        onChangeFilter = { filterChangeHandler }\r\n        /> <\r\n        ExpensesChart expenses = { filteredExpenses }\r\n        /> <\r\n        ExpensesList items = { filteredExpenses }\r\n        /> <\r\n        /Card> <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default Expenses;","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [{\n        id: \"e1\",\n        title: \"Toilet Paper\",\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n        id: \"e3\",\n        title: \"Car Insurance\",\n        amount: 294.67,\n        date: new Date(2021, 2, 28),\n    },\n    {\n        id: \"e4\",\n        title: \"New Desk (Wooden)\",\n        amount: 450,\n        date: new Date(2021, 5, 12),\n    },\n];\nconst App = () => {\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n    const addExpenseHandler = (expense) => {\n        setExpenses(prevExpenses => {\n            return [expense, ...prevExpenses]\n        });\n    };\n\n    return ( <\n        div >\n        <\n        NewExpense onAddExpense = { addExpenseHandler }\n        /> <\n        Expenses items = { expenses }\n        />{\" \"} <\n        /div>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}